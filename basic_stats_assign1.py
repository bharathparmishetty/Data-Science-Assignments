# -*- coding: utf-8 -*-
"""BASIC STATS ASSIGN1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1x3WEgGz2n7r8LGJMfYC5rmiS3tbDOSs3
"""

#importing basic libaries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

#reading the file
salesdata=pd.read_csv("sales_data_with_discounts.csv")
salesdata

salesdata.head()

#checking no.of rows&columns
salesdata.shape

#information about the dataframe
salesdata.info()

#checking for null values
salesdata.isnull().sum()

#describing the data
salesdata.describe()

#separating numerical & categorical columns
numerical_cols=salesdata.select_dtypes(include=['float','int']).columns
categorical_cols=salesdata.select_dtypes(include=['object']).columns
print("Numerical Columns:",numerical_cols)
print("Categorical Columns:",categorical_cols)

#finding mean for numerical columns
salesdata[numerical_cols].mean()

#finding median for numerical columns
salesdata[numerical_cols].median()

"""MODES FOR NUMERICAL COLUMNS

"""

salesdata.Volume.mode()

salesdata["Avg Price"].mode()

salesdata["Total Sales Value"].mode()

salesdata["Discount Rate (%)"].mode()

salesdata["Discount Amount"].mode()

salesdata["Net Sales Value"].mode()

"""HISTOGRAMS OF NUMERICAL COLUMNS

"""

plt.figure(figsize=(5,5))
for column in numerical_cols:
  plt.hist(salesdata[column],color="skyblue",edgecolor="black")
  plt.title(f"Histogram of {column}")
  plt.xlabel(column)
  plt.ylabel("frequency")
  plt.show()

"""BOXPLOTS FOR NUMERICAL COLUMNS"""

plt.figure(figsize=(10,5))
for column in numerical_cols:
  plt.boxplot(salesdata[column])
  plt.title(f"BOXPLOT OF {column}")
  plt.xlabel(column)
  plt.show()

plt.figure(figsize=(10,6))
for column in categorical_cols:
  plt.bar(salesdata[column].value_counts().index, salesdata[column].value_counts().values)
  plt.title(f"Distribution  of {column}")
  plt.xlabel(column)
  plt.ylabel("frequency")
  plt.xticks(rotation=45)
  plt.tight_layout()
  plt.show()

from sklearn.preprocessing import StandardScaler
salesdata[numerical_cols]=StandardScaler().fit_transform(salesdata[numerical_cols])
salesdata[numerical_cols]

#After standardization
salesdata[numerical_cols].describe()

plt.figure(figsize=(5,5))
for column in numerical_cols:
  plt.hist(salesdata[column],color="skyblue",edgecolor="black")
  plt.title(f"Histogram of {column}")
  plt.xlabel(column)
  plt.ylabel("frequency")
  plt.show()

pd.get_dummies(salesdata,dtype="int")

